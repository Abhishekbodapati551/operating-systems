#include <iostream>
#include <algorithm>

using namespace std;

struct Process {
    int pid, bt, wt, tat;
};

bool compare(Process a, Process b) {
    return a.bt < b.bt; 
}

void calculateTimes(Process proc[], int n) {
    proc[0].wt = 0; 
    
    for (int i = 1; i < n; i++) {
        proc[i].wt = proc[i - 1].wt + proc[i - 1].bt;
    }
    
    for (int i = 0; i < n; i++) {
        proc[i].tat = proc[i].wt + proc[i].bt;
    }
}

void displayProcesses(Process proc[], int n) {
    cout << "\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n";
    for (int i = 0; i < n; i++) {
        cout << "P" << proc[i].pid << "\t\t" << proc[i].bt << "\t\t" << proc[i].wt << "\t\t" << proc[i].tat << endl;
    }
}

int main() {
    int n;
    cout << "Enter number of processes: ";
    cin >> n;

    Process proc[n];
    
    cout << "Enter Burst Time for each process:\n";
    for (int i = 0; i < n; i++) {
        proc[i].pid = i + 1;
        cout << "P" << proc[i].pid << ": ";
        cin >> proc[i].bt;
    }
    
    sort(proc, proc + n, compare);
    
    calculateTimes(proc, n);
    displayProcesses(proc, n);

    return 0;
}
